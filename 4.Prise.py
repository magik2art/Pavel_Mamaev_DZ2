# 5. Создать список, содержащий цены на товары (10–20 товаров), например:
# [57.8, 46.51, 97, ...]
# * Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде <r> руб <kk> коп (например «5 руб 04 коп»).
# Подумать, как из цены получить рубли и копейки, как добавить нули, если, например,
# получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).
#
# * Вывести цены, отсортированные по возрастанию, новый список не создавать
# (доказать, что объект списка после сортировки остался тот же).
# * Создать новый список, содержащий те же цены, но отсортированные по убыванию.
# * Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?
#
# Задачи со * предназначены для продвинутых учеников, которым мало сделать обычное задание.

goods_prise = [57.8, 46.51, 97, 123.22, 333.23, 123.02, 12312.3, 3.22, 35.11, 23.4]

goods_prise.sort() # Вывести цены, отсортированные по возрастанию, новый список не создавать
goods_prise_downward = goods_prise.copy() # копируем список для приведения к уменьшению
goods_prise_downward.sort(reverse=True) # сортируем по уменьшению цены

print(goods_prise_downward, "цены по убыванию")

i = 0
while i < 5: # для выведения всего списка(а не 5 самых дорогих) поменять 5 на len(goods_prise)
    goods_prise_1 = goods_prise[-1 - i] # для сортировки по убыванию поменять [-1 - i] на [i]
    str(goods_prise_1).split(".")
    dollars = float(f'{goods_prise_1 :.2f}')
    cents = int(float(f'{dollars % 1 :.2f}') * 100)
    if cents == 0:
        cents_itog = "00"
        print((int((dollars - dollars % 1))), "руб", cents_itog, "коп")
    elif cents < 10:
        cents_itog = ("0" + str(cents))
        cents_itog = "".join(cents_itog)
        print((int((dollars - dollars % 1))), "руб", cents_itog, "коп")
    else:
        cents_itog = cents
        print((int((dollars - dollars % 1))), "руб", cents_itog, "коп")
    i += 1
